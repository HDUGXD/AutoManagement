<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    <!-- 支持spring3.0新的mvc注解 -->
    <mvc:annotation-driven/>
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- velocity模板配置,配置Velocity引擎 -->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="velocityEngine" ref="velocityEngine"></property>
    </bean>

    <!--对于spring父容器spring-beans.xml-->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="configLocation" value="${velocity.configLocation}"/>
        <!-- 所有的模板都存放在此路径下 -->
        <property name="resourceLoaderPath" value="${velocity.resourceLoaderPath}"/>
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <!--<prop key="userdirective">${velocity.userdirective}</prop>-->
            </props>
        </property>
    </bean>
    <!--要使用Velocity模板视图-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="${velocity.cache}"/>
        <property name="prefix" value="${velocity.prefix}"/>
        <property name="suffix" value="${velocity.suffix}"/>
        <property name="contentType" value="${velocity.contentType}"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="requestContextAttribute" value="rc"/>
        <property name="attributes" ref="_globalVars"/>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">    
        <property name="messageConverters">    
            <list>    
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">    
                    <property name="supportedMediaTypes">    
                        <list>    
                            <value>text/plain;charset=UTF-8</value>  
                            <value>text/html;charset=UTF-8</value>  
                            <value>applicaiton/javascript;charset=UTF-8</value>    
                        </list>    
                    </property>    
                </bean>    
            </list>    
        </property>    
    </bean>  
    
    <!--如果要使用fastjson作为@ResponseBody输出的话还需要额外配置message-converters -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxInMemorySize">
        <value>1638400</value>
    </property>
    
<!--     <mvc:annotation-driven> -->
<!--         <mvc:message-converters register-defaults="true"> -->
<!--             <bean class="org.springframework.http.converter.StringHttpMessageConverter"> -->
<!--               <constructor-arg value="UTF-8" /> -->
<!--             </bean> -->
<!--         </mvc:message-converters> -->
<!--     </mvc:annotation-driven> -->
    </bean>

    <!--登录拦截-->
   <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.supconit.easy.ticket.shiro.controllers.SecurityInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <!--权限拦截-->
   <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/shiro/*"/>
            <bean class="com.supconit.easy.ticket.shiro.controllers.ShiroInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->
</beans>