<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxws="http://cxf.apache.org/jaxws"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	   xsi:schemaLocation="
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                http://www.springframework.org/schema/data/mongo
                http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
                http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
 http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
">
	<!-- Spring 配置文件，可插拔Bean在此配置以获得开启或者关闭 -->
	<!-- =============== SPRING CONFIG BEGIN ================ -->
	<context:annotation-config />
	<task:annotation-driven />
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 请在此加入需要注解扫描的包路径 -->
	<context:component-scan base-package="com.kdmt.gxd.easy"/>
	<!-- ================ SPRING CONFIG END ================= -->

    <!--&lt;!&ndash;Spring CXF&ndash;&gt;-->
	<!--<bean id="TracklogSender" class="com.kdmt.gxd.easy.webservice.services.impl.GEForMcuImpl"></bean>-->
	<!--<jaxws:endpoint id="wbUserService" implementor="#TracklogSender" address="/wsser" />-->

	<!--<bean id="amqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate"></bean>-->



	<!-- =============== ORM CONFIG BEGIN ================ -->
	<!-- 数据源配置 -->
    <bean id="ds1" class="com.alibaba.druid.pool.DruidDataSource" p:driverClassName="${jdbc.ds1.driver}" p:url="${jdbc.ds1.jdbcUrl}" 
    	p:username="${jdbc.ds1.username}" p:password="${jdbc.ds1.password}"
		p:initialSize="${jdbc.ds1.initialSize}" p:maxActive="${jdbc.ds1.maxActive}" p:testOnBorrow="${jdbc.ds1.testOnBorrow:false}" destroy-method="close">
	</bean>
	<!--sqlSessionFactory-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds1"/>
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/kdmt/gxd/easy/**/mappers/*Mapper.xml"/>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="ds1"/>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!--mybatis统一扫描接口,你可以使用分号或逗号 作为分隔符设置多于一个的包路径。每个映射器将会在指定的包路径中递归地被搜索到,支持Ant通配符-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.kdmt.gxd.**.daos"/>
	</bean>
	<!-- ================ ORM CONFIG END ================= -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<property name="maxTotal" value="${redis.maxActive}"/>
		<property name="maxWaitMillis" value="${redis.maxWait}"/>
		<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
	</bean>

	<bean id="jedis" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:hostName="${redis.host}" p:port="${redis.port}" p:poolConfig-ref="poolConfig" p:timeout="${redis.timeout}"/>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedis"/>
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
			<!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
		</property>
	</bean>

	<!--==========mongodb start===================-->
	<!--&lt;!&ndash;引入MongoDB连接文件&ndash;&gt;-->
	<context:property-placeholder location="classpath*:mongodb.properties" ignore-unresolvable="true"/>
	<!--连接MongoDB服务器-->
	<mongo:mongo-client id="mongo" host="192.168.11.69" port="27017" >
		<mongo:client-options connections-per-host="8"
							  threads-allowed-to-block-for-connection-multiplier="4"
							  connect-timeout="1500"
							  max-wait-time="1500"
							  socket-keep-alive="true"
							  socket-timeout="1500"/>
	</mongo:mongo-client>

	<mongo:db-factory id="mongoDbFactory"  dbname="${mongo.dbname}"  mongo-ref="mongo"/>


	<!--配置mongoTemplate-->
	<!-- mongodb的主要操作对象，所有对mongodb的增删改查的操作都是通过它完成-->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
	</bean>

	<!--==========mongodb end =====================-->



	<!-- =============== PROFILES BEGIN ================ -->
	<beans profile="dev">
		<context:property-placeholder location="classpath:/config-dev.properties" ignore-unresolvable="true" />
		<util:properties id="_globalVars" location="classpath:/global-vars-dev.properties" />
		<context:property-placeholder location="classpath:/redis.properties" ignore-unresolvable="true"/>
		<import resource="classpath:/mvc.xml" />
		<!--ssm 集成 mongodb-->
		<import resource="classpath:/spring-mongodb.xml"/>
		<!--ssm 集成 rabbitmq-->
		<import resource="classpath:/spring-rabbitmq.xml"/>
		<!-- 扫描指定package下所有带有如@controller,@services,@resource,@ods并把所注释的注册为Spring Beans -->
		<context:component-scan base-package="com.kdmt.gxd.easy.util.rabbitMq,com.kdmt.gxd.easy.webservice.services" />

		<!-- 激活annotation功能 -->
		<context:annotation-config />
		<!-- 激活annotation功能 -->
		<context:spring-configured />
	</beans>

	<!-- ================ PROFILES END ================= -->
</beans>
